//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Autossential.Activities.Properties {
    using System;
    
    
    /// <summary>
    /// A strongly-typed resource class, for looking up localized strings, formatting them, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilderEx class via the ResXFileCodeGeneratorEx custom tool.
    // To add or remove a member, edit your .ResX file then rerun the ResXFileCodeGeneratorEx custom tool or rebuild your VS.NET project.
    // Copyright (c) Dmytro Kryvko 2006-2020 (http://dmytro.kryvko.googlepages.com/)
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("DMKSoftware.CodeGenerators.Tools.StronglyTypedResourceBuilderEx", "3.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
#if !SILVERLIGHT
    [global::System.Reflection.ObfuscationAttribute(Exclude=true, ApplyToMembers=true)]
#endif
    [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Naming", "CA1724:TypeNamesShouldNotMatchNamespaces")]
    public partial class Resources {
        
        private static global::System.Resources.ResourceManager _resourceManager;
        
        private static object _internalSyncObject;
        
        private static global::System.Globalization.CultureInfo _resourceCulture;
        
        /// <summary>
        /// Initializes a Resources object.
        /// </summary>
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        public Resources() {
        }
        
        /// <summary>
        /// Thread safe lock object used by this class.
        /// </summary>
        public static object InternalSyncObject {
            get {
                if (object.ReferenceEquals(_internalSyncObject, null)) {
                    global::System.Threading.Interlocked.CompareExchange(ref _internalSyncObject, new object(), null);
                }
                return _internalSyncObject;
            }
        }
        
        /// <summary>
        /// Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(_resourceManager, null)) {
                    global::System.Threading.Monitor.Enter(InternalSyncObject);
                    try {
                        if (object.ReferenceEquals(_resourceManager, null)) {
                            global::System.Threading.Interlocked.Exchange(ref _resourceManager, new global::System.Resources.ResourceManager("Autossential.Activities.Properties.Resources", typeof(Resources).Assembly));
                        }
                    }
                    finally {
                        global::System.Threading.Monitor.Exit(InternalSyncObject);
                    }
                }
                return _resourceManager;
            }
        }
        
        /// <summary>
        /// Overrides the current thread's CurrentUICulture property for all
        /// resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return _resourceCulture;
            }
            set {
                _resourceCulture = value;
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Common'.
        /// </summary>
        public static string Common_Category {
            get {
                return ResourceManager.GetString(ResourceNames.Common_Category, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'The decrement value cannot be smaller than 1'.
        /// </summary>
        public static string Decrement_Value_Error {
            get {
                return ResourceManager.GetString(ResourceNames.Decrement_Value_Error, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'The increment value cannot be smaller than 1'.
        /// </summary>
        public static string Increment_Value_Error {
            get {
                return ResourceManager.GetString(ResourceNames.Increment_Value_Error, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Input'.
        /// </summary>
        public static string Input_Category {
            get {
                return ResourceManager.GetString(ResourceNames.Input_Category, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Options'.
        /// </summary>
        public static string Options_Category {
            get {
                return ResourceManager.GetString(ResourceNames.Options_Category, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Output'.
        /// </summary>
        public static string Output_Category {
            get {
                return ResourceManager.GetString(ResourceNames.Output_Category, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Reference'.
        /// </summary>
        public static string Reference_Category {
            get {
                return ResourceManager.GetString(ResourceNames.Reference_Category, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Cannot be used outside of {0} activity'.
        /// </summary>
        public static string Validation_ScopeError {
            get {
                return ResourceManager.GetString(ResourceNames.Validation_ScopeError, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Please provide a value of type {0} for {1}'.
        /// </summary>
        public static string Validation_TypeError {
            get {
                return ResourceManager.GetString(ResourceNames.Validation_TypeError, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Please provide a value for {0}'.
        /// </summary>
        public static string Validation_ValueError {
            get {
                return ResourceManager.GetString(ResourceNames.Validation_ValueError, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'The accepted value range is between {0} and {1}. The value will be reseted to its nearest limit'.
        /// </summary>
        public static string WaitFile_Interval_Error {
            get {
                return ResourceManager.GetString(ResourceNames.WaitFile_Interval_Error, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Formats a localized string similar to 'Cannot be used outside of {0} activity'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string Validation_ScopeErrorFormat(object arg0) {
            return string.Format(_resourceCulture, Validation_ScopeError, arg0);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'Please provide a value of type {0} for {1}'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <param name="arg1">An object (1) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string Validation_TypeErrorFormat(object arg0, object arg1) {
            return string.Format(_resourceCulture, Validation_TypeError, arg0, arg1);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'Please provide a value for {0}'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string Validation_ValueErrorFormat(object arg0) {
            return string.Format(_resourceCulture, Validation_ValueError, arg0);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'The accepted value range is between {0} and {1}. The value will be reseted to its nearest limit'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <param name="arg1">An object (1) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string WaitFile_Interval_ErrorFormat(object arg0, object arg1) {
            return string.Format(_resourceCulture, WaitFile_Interval_Error, arg0, arg1);
        }
        
        /// <summary>
        /// Lists all the resource names as constant string fields.
        /// </summary>
        public class ResourceNames {
            
            /// <summary>
            /// Stores the resource name 'Common_Category'.
            /// </summary>
            public const string Common_Category = "Common_Category";
            
            /// <summary>
            /// Stores the resource name 'Decrement_Value_Error'.
            /// </summary>
            public const string Decrement_Value_Error = "Decrement_Value_Error";
            
            /// <summary>
            /// Stores the resource name 'Increment_Value_Error'.
            /// </summary>
            public const string Increment_Value_Error = "Increment_Value_Error";
            
            /// <summary>
            /// Stores the resource name 'Input_Category'.
            /// </summary>
            public const string Input_Category = "Input_Category";
            
            /// <summary>
            /// Stores the resource name 'Options_Category'.
            /// </summary>
            public const string Options_Category = "Options_Category";
            
            /// <summary>
            /// Stores the resource name 'Output_Category'.
            /// </summary>
            public const string Output_Category = "Output_Category";
            
            /// <summary>
            /// Stores the resource name 'Reference_Category'.
            /// </summary>
            public const string Reference_Category = "Reference_Category";
            
            /// <summary>
            /// Stores the resource name 'Validation_ScopeError'.
            /// </summary>
            public const string Validation_ScopeError = "Validation_ScopeError";
            
            /// <summary>
            /// Stores the resource name 'Validation_TypeError'.
            /// </summary>
            public const string Validation_TypeError = "Validation_TypeError";
            
            /// <summary>
            /// Stores the resource name 'Validation_ValueError'.
            /// </summary>
            public const string Validation_ValueError = "Validation_ValueError";
            
            /// <summary>
            /// Stores the resource name 'WaitFile_Interval_Error'.
            /// </summary>
            public const string WaitFile_Interval_Error = "WaitFile_Interval_Error";
        }
    }
}
